@use '../../../styles/variables.module';

.hoverIconButton {
  color: #999;

  &:hover {
    color: var(--primary-color-hover);
    cursor: pointer;
  }
}

.addressTextWithAlias {
  display: flex;
  align-items: center;

  .icon {
    flex-shrink: 0;
    margin-right: 4px;
  }

  .text {
    flex: 1;
    min-width: 0;
  }

  .link {
    flex: 1;
    min-width: 0;
  }
}

.addressWidthModify {
  min-width: 0;
  width: 260px;

  @media (width <= variables.$xxlBreakPoint) {
    width: 148px;
  }

  @media (width <= variables.$extraLargeBreakPoint) {
    width: 260px;
  }

  @media (width <= variables.$mobileBreakPoint) {
    width: 460px;
  }
}

.currentAddressIcon {
  margin-left: 6px;
  width: 14px;

  @media (width <= variables.$mobileBreakPoint) {
    margin-bottom: 2px;
  }
}

.transactionCellCapacityPanel {
  flex-shrink: 0;
  color: #000;
  margin-left: 15px;
  display: flex;
  max-height: 40px;
  align-items: center;

  :global(.transactionCellWithoutIcon) {
    margin-right: 21px;
  }

  @media (max-width: variables.$mobileBreakPoint) {
    margin-left: 0;
    margin-top: 5px;
    height: 16px;
    width: 100%;
    justify-content: flex-end;

    :global(.transactionCellWithoutIcon) {
      margin: 0 6px;
    }
  }

  > span {
    margin-left: 5px;
  }
}

.transactionCellPanel {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin-top: 16px;
  background: #f5f5f5;

  &.highLight {
    background: none;

    :global(.transactionCellAddress) {
      color: var(--primary-color);
    }
  }

  @media (min-width: variables.$mobileBreakPoint) {
    height: 20px;
  }

  @media (max-width: variables.$mobileBreakPoint) {
    justify-content: normal;
    align-items: flex-start;
    flex-direction: column;
  }

  :global(.transactionCellAddress) {
    color: #000;
    font-weight: 500;
    min-width: 0;
    width: 100%;
    height: 20px;
    display: flex;
    align-items: center;

    @media (max-width: variables.$mobileBreakPoint) {
      height: 16px;
      font-size: 14px;
    }

    a {
      color: var(--primary-color);
    }

    a:hover {
      color: var(--primary-color-hover);
    }
  }
}

.transactionCellWithdraw {
  display: flex;
  align-items: center;
  margin-top: 2px;

  img {
    margin-left: 5px;
    width: 16px;
    height: auto;
    cursor: pointer;

    @media (max-width: variables.$mobileBreakPoint) {
      width: 12px;
      height: auto;
    }
  }
}

.transactionCellUDTPanel {
  display: flex;
  align-items: center;

  span {
    margin-left: 6px;
  }

  :global(.transactionCellUdtIcon) {
    margin-left: 5px;
    width: 16px;
    height: auto;
    cursor: pointer;

    @media (max-width: variables.$mobileBreakPoint) {
      width: 12px;
      height: auto;
      margin-bottom: 3px;
    }
  }
}

.withdrawInfoPanel {
  > p {
    font-size: 16px;
    font-weight: 600;
    width: 100%;
    text-align: center;
    margin-bottom: 16px;

    @media (max-width: variables.$mobileBreakPoint) {
      font-size: 11px;
      margin-bottom: 8px;
    }
  }
}

.withdrawItemPanel {
  margin: 10px;
  display: flex;

  @media (max-width: variables.$mobileBreakPoint) {
    margin: 5px;
  }

  :global(.withdrawInfoTitle) {
    font-size: 14px;
    font-weight: 450;
    width: 85px;

    &:global(.long) {
      width: 180px;
    }

    &:global(.medium) {
      width: 150px;
    }

    @media (max-width: variables.$mobileBreakPoint) {
      font-size: 10px;
      width: 60px;

      &:global(.long) {
        width: 130px;
      }

      &:global(.medium) {
        width: 105px;
      }
    }

    @media (max-width: 375px) {
      font-size: 9px;
      width: 65px;

      &:global(.long) {
        width: 145px;
      }

      &:global(.medium) {
        width: 115px;
      }
    }
  }

  :global(.withdrawInfoContent) {
    font-size: 14px;

    @media (max-width: variables.$mobileBreakPoint) {
      font-size: 10px;

      * {
        font-size: inherit;
      }
    }

    @media (max-width: 375px) {
      font-size: 9px;
    }
  }

  a {
    color: var(--primary-color);
  }

  a:hover {
    color: var(--primary-color-hover);
  }
}
